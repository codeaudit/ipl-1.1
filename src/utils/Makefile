# Makefile generated by imake - do not edit!
# $TOG: imake.c /main/97 1997/06/20 20:23:51 kaleb $

# Read "template" to understand how this Makefile was generated.
# Edit <arch.def> to add support for a new platform.
# Edit <InterViews/iv-linux.cf> to change platform-specific parameters.
# Edit <local.def> to change site-specific parameters.
# Edit <utils/Imakefile> to change actions that make should perform.

# architecture:  LINUX

# -------------------------------------------------------------------------
# from <local.def>:

     GPLUSPLUS_INCLUDE_DIR = /usr/include/g++
          TOOL_INCLUDE_DIR = /usr/local/include

    NORM_CCINCLUDES = -I$(CURRENT_DIR)/.. -I$(CURRENT_DIR)/../.. -I$(TOP)/src -I$(IVTOOLSSRC) $(BACKWARD_CCINCLUDES) -I$(IVTOOLSSRC)/include -I$(IVTOOLSSRC)/include/ivstd $(X_CCINCLUDES)

     APP_CCINCLUDES = $(NORM_CCINCLUDES)

	IVTOOLSLIBDIR = /proj/ivtools-0.8/src

        IVTOOLSSRC = /proj/ivtools-0.8/src
   IVTOOLS_VERSION = 0.8.3

LIBUNIDRAWCOMMON = -L$(IVTOOLSLIBDIR)/Unidraw-common/$(CPU) -lUnidraw-common
LIBIVCOMMON = -L$(IVTOOLSLIBDIR)/IV-common/$(CPU) -lIV-common
LIBTIME = -L$(IVTOOLSLIBDIR)/Time/$(CPU) -lTime
LIBATTRIBUTE = -L$(IVTOOLSLIBDIR)/Attribute/$(CPU) -lAttribute
LIBCOMUTIL = -L$(IVTOOLSLIBDIR)/ComUtil/$(CPU) -lComUtil
LIBCOMTERP = -L$(IVTOOLSLIBDIR)/ComTerp/$(CPU) -lComTerp
LIBIVGLYPH = -L$(IVTOOLSLIBDIR)/IVGlyph/$(CPU) -lIVGlyph
LIBATTRGLYPH = -L$(IVTOOLSLIBDIR)/AttrGlyph/$(CPU) -lAttrGlyph
LIBCOMGLYPH = -L$(IVTOOLSLIBDIR)/ComGlyph/$(CPU) -lComGlyph
LIBGLYPHTERP = -L$(IVTOOLSLIBDIR)/GlyphTerp/$(CPU) -lGlyphTerp
LIBUNIIDRAW = -L$(IVTOOLSLIBDIR)/UniIdraw/$(CPU) -lUniIdraw
LIBTOPOFACE = -L$(IVTOOLSLIBDIR)/TopoFace/$(CPU) -lTopoFace
LIBOVERLAYUNIDRAW = -L$(IVTOOLSLIBDIR)/OverlayUnidraw/$(CPU) -lOverlayUnidraw

LIBACEDISPATCH = -L$(IVTOOLSLIBDIR)/AceDispatch/$(CPU) -lAceDispatch

LIBCOMUNIDRAW = -L$(IVTOOLSLIBDIR)/ComUnidraw/$(CPU) -lComUnidraw
LIBFRAMEUNIDRAW = -L$(IVTOOLSLIBDIR)/FrameUnidraw/$(CPU) -lFrameUnidraw
LIBGRAPHUNIDRAW = -L$(IVTOOLSLIBDIR)/GraphUnidraw/$(CPU) -lGraphUnidraw
LIBDRAWSERV = -L$(IVTOOLSLIBDIR)/DrawServ/$(CPU) -lDrawServ

DEPUNIDRAWCOMMON = $(IVTOOLSLIBDIR)/Unidraw-common/$(CPU)/libUnidraw-common.so.$(IVTOOLS_VERSION)
DEPIVCOMMON = $(IVTOOLSLIBDIR)/IV-common/$(CPU)/libIV-common.so.$(IVTOOLS_VERSION)
DEPTIME = $(IVTOOLSLIBDIR)/Time/$(CPU)/libTime.so.$(IVTOOLS_VERSION)
DEPATTRIBUTE = $(IVTOOLSLIBDIR)/Attribute/$(CPU)/libAttribute.so.$(IVTOOLS_VERSION)
DEPCOMUTIL = $(IVTOOLSLIBDIR)/ComUtil/$(CPU)/libComUtil.so.$(IVTOOLS_VERSION)
DEPCOMTERP = $(IVTOOLSLIBDIR)/ComTerp/$(CPU)/libComTerp.so.$(IVTOOLS_VERSION)
DEPIVGLYPH = $(IVTOOLSLIBDIR)/IVGlyph/$(CPU)/libIVGlyph.so.$(IVTOOLS_VERSION)
DEPATTRGLYPH = $(IVTOOLSLIBDIR)/AttrGlyph/$(CPU)/libAttrGlyph.so.$(IVTOOLS_VERSION)
DEPCOMGLYPH = $(IVTOOLSLIBDIR)/ComGlyph/$(CPU)/libComGlyph.so.$(IVTOOLS_VERSION)
DEPGLYPHTERP = $(IVTOOLSLIBDIR)/GlyphTerp/$(CPU)/libGlyphTerp.so.$(IVTOOLS_VERSION)
DEPUNIIDRAW = $(IVTOOLSLIBDIR)/UniIdraw/$(CPU)/libUniIdraw.so.$(IVTOOLS_VERSION)
DEPTOPOFACE = $(IVTOOLSLIBDIR)/TopoFace/$(CPU)/libTopoFace.so.$(IVTOOLS_VERSION)
DEPOVERLAYUNIDRAW = $(IVTOOLSLIBDIR)/OverlayUnidraw/$(CPU)/libOverlayUnidraw.so.$(IVTOOLS_VERSION)

DEPACEDISPATCH = $(IVTOOLSLIBDIR)/AceDispatch/$(CPU)/libAceDispatch.so.$(IVTOOLS_VERSION)

DEPCOMUNIDRAW = $(IVTOOLSLIBDIR)/ComUnidraw/$(CPU)/libComUnidraw.so.$(IVTOOLS_VERSION)
DEPFRAMEUNIDRAW = $(IVTOOLSLIBDIR)/FrameUnidraw/$(CPU)/libFrameUnidraw.so.$(IVTOOLS_VERSION)
DEPGRAPHUNIDRAW = $(IVTOOLSLIBDIR)/GraphUnidraw/$(CPU)/libGraphUnidraw.so.$(IVTOOLS_VERSION)
DEPDRAWSERV = $(IVTOOLSLIBDIR)/DrawServ/$(CPU)/libDrawServ.so.$(IVTOOLS_VERSION)

          VHCLMAPSSRC = $(TOP)/src

LIBMAP = -L$(VHCLMAPSSRC)/Map/$(CPU) -lMap
LIBDEM = -L$(VHCLMAPSSRC)/Dem/$(CPU) -lDem
LIBVPFUTIL = -L$(VHCLMAPSSRC)/VpfUtil/$(CPU) -lVpfUtil
LIBVPF = -L$(VHCLMAPSSRC)/Vpf/$(CPU) -lVpf
LIBDLG = -L$(VHCLMAPSSRC)/Dlg/$(CPU) -lDlg
LIBLOS = -L$(VHCLMAPSSRC)/Los/$(CPU) -lLos
LIBLOSSERV = -L$(VHCLMAPSSRC)/LosServ/$(CPU) -lLosServ
LIBMAPUNIDRAW = -L$(VHCLMAPSSRC)/MapUnidraw/$(CPU) -lMapUnidraw
LIBVPFUNIDRAW = -L$(VHCLMAPSSRC)/VpfUnidraw/$(CPU) -lVpfUnidraw
LIBDLGUNIDRAW = -L$(VHCLMAPSSRC)/DlgUnidraw/$(CPU) -lDlgUnidraw
LIBUTMUNIDRAW = -L$(VHCLMAPSSRC)/UtmUnidraw/$(CPU) -lUtmUnidraw
LIBDEMUNIDRAW = -L$(VHCLMAPSSRC)/DemUnidraw/$(CPU) -lDemUnidraw
LIBDEMVTK = -L$(VHCLMAPSSRC)/DemVtk/$(CPU) -lDemVtk
LIBMAPSERV = -L$(VHCLMAPSSRC)/MapServ/$(CPU) -lMapServ
LIBPROJSERV = -L$(VHCLMAPSSRC)/ProjServ/$(CPU) -lProjServ
LIBPROJUNIDRAW = -L$(VHCLMAPSSRC)/ProjUnidraw/$(CPU) -lProjUnidraw
LIBVEHICLE = -L$(VHCLMAPSSRC)/Vehicle/$(CPU) -lVehicle
LIBVHCLSERV = -L$(VHCLMAPSSRC)/VhclServ/$(CPU) -lVhclServ
LIBVHCLUNIDRAW = -L$(VHCLMAPSSRC)/VhclUnidraw/$(CPU) -lVhclUnidraw

DEPMAP = $(VHCLMAPSSRC)/Map/$(CPU)/libMap.so.$(VERSION)
DEPDEM = $(VHCLMAPSSRC)/Dem/$(CPU)/libDem.so.$(VERSION)
DEPVPFUTIL = $(VHCLMAPSSRC)/VpfUtil/$(CPU)/libVpfUtil.so.$(VERSION)
DEPVPF = $(VHCLMAPSSRC)/Vpf/$(CPU)/libVpf.so.$(VERSION)
DEPDLG = $(VHCLMAPSSRC)/Dlg/$(CPU)/libDlg.so.$(VERSION)
DEPLOS = $(VHCLMAPSSRC)/Los/$(CPU)/libLos.so.$(VERSION)
DEPLOSSERV = $(VHCLMAPSSRC)/LosServ/$(CPU)/libLosServ.so.$(VERSION)
DEPMAPUNIDRAW = $(VHCLMAPSSRC)/MapUnidraw/$(CPU)/libMapUnidraw.so.$(VERSION)
DEPVPFUNIDRAW = $(VHCLMAPSSRC)/VpfUnidraw/$(CPU)/libVpfUnidraw.so.$(VERSION)
DEPDLGUNIDRAW = $(VHCLMAPSSRC)/DlgUnidraw/$(CPU)/libDlgUnidraw.so.$(VERSION)
DEPUTMUNIDRAW = $(VHCLMAPSSRC)/UtmUnidraw/$(CPU)/libUtmUnidraw.so.$(VERSION)
DEPDEMUNIDRAW = $(VHCLMAPSSRC)/DemUnidraw/$(CPU)/libDemUnidraw.so.$(VERSION)
DEPDEMVTK = $(VHCLMAPSSRC)/DemVtk/$(CPU)/libDemVtk.so.$(VERSION)
DEPMAPSERV = $(VHCLMAPSSRC)/MapServ/$(CPU)/libMapServ.so.$(VERSION)
DEPPROJSERV = $(VHCLMAPSSRC)/ProjServ/$(CPU)/libProjServ.so.$(VERSION)
DEPPROJUNIDRAW = $(VHCLMAPSSRC)/ProjUnidraw/$(CPU)/libProjUnidraw.so.$(VERSION)
DEPVEHICLE = $(VHCLMAPSSRC)/Vehicle/$(CPU)/libVehicle.so.$(VERSION)
DEPVHCLSERV = $(VHCLMAPSSRC)/VhclServ/$(CPU)/libVhclServ.so.$(VERSION)
DEPVHCLUNIDRAW = $(VHCLMAPSSRC)/VhclUnidraw/$(CPU)/libVhclUnidraw.so.$(VERSION)

# -------------------------------------------------------------------------

   RELEASE = vhclmaps-0.7

   VERSION = 0.7.5

   REPOSITORY_FILES = *.c *.cc *.cxx *.C *.h Imakefile *.def template README INSTALL VERSION MANIFEST README.ivmkcm COPYRIGHT ANNOUNCE *.SGI *.LINUX *.SUN4 *.HP800 *.cf *.sh CHANGES CHANGES-0.5 CHANGES-0.6 configure configure.in config.defs.in *.mk *.m4 *.notes install-sh config.sub config.guess

              SHELL = /bin/sh

              IMAKE = imake
         IMAKEFLAGS = \
	-T "template"\
	-I$(TOP)/config -I$(CONFIGSRC) -I$(XCONFIGDIR)\
	$(SPECIAL_IMAKEFLAGS)
 SPECIAL_IMAKEFLAGS =
             DEPEND = makedepend
     DEPEND_CCFLAGS = -D__GNUG__ -DMAKEDEPEND $(CCDEFINES) $(CCINCLUDES) -I$(GPLUSPLUS_INCLUDE_DIR) -I$(TOOL_INCLUDE_DIR) -UHAVE_ACE
               MAKE = make
           PASSARCH = ARCH="$(ARCH)" SPECIAL_IMAKEFLAGS="$(SPECIAL_IMAKEFLAGS)" CMFLAGS="$(CMFLAGS)" CMMSG="$(CMMSG)"
          ARCHORCPU = $(CPU)
               ARCH = $(ARCHORCPU)$(SPECIAL_ARCH)
       SPECIAL_ARCH =

           CCDRIVER = c++
           CCSUFFIX = c
            CDRIVER = gcc
            CSUFFIX = c
                SRC = /proj/vhclmaps-0.7/src/utils/.
              SLASH = /
               SRCS = $(SRC)$(SLASH)*.$(CCSUFFIX)
               OBJS = *.o
               AOUT = a.out

            CCFLAGS = $(APP_CCFLAGS) $(IV_CCFLAGS) $(OTHER_CCFLAGS) $(EXTRA_CCFLAGS)
         IV_CCFLAGS = \
	$(DEBUG_CCFLAGS)\
	$(OPTIMIZE_CCFLAGS)\
	$(SHARED_CCFLAGS)\
	$(CCDEFINES)\
	$(CCINCLUDES)
      DEBUG_CCFLAGS = -g
   OPTIMIZE_CCFLAGS = -O6
     SHARED_CCFLAGS =
      EXTRA_CCFLAGS =

          CCDEFINES = $(APP_CCDEFINES) $(IV_CCDEFINES) $(OTHER_CCDEFINES) $(EXTRA_CCDEFINES)
       IV_CCDEFINES = $(LANGUAGE_CCDEFINES) $(BACKWARD_CCDEFINES)
 LANGUAGE_CCDEFINES = -Dcplusplus_2_1
 BACKWARD_CCDEFINES =
    EXTRA_CCDEFINES =

      VTK_CCDEFINES =
 CLIPPOLY_CCDEFINES =
      ACE_CCDEFINES = -DHAVE_ACE

         CCINCLUDES = $(APP_CCINCLUDES) $(IV_CCINCLUDES) $(OTHER_CCINCLUDES) $(EXTRA_CCINCLUDES)
      IV_CCINCLUDES = \
	$(BACKWARD_CCINCLUDES)\
	$(TOP_CCINCLUDES)\
	$(X_CCINCLUDES)
BACKWARD_CCINCLUDES =
     TOP_CCINCLUDES = -I$(INCSRC)
       X_CCINCLUDES = -I$(XINCDIR)
   EXTRA_CCINCLUDES =

     VTK_CCINCLUDES =
    MESA_CCINCLUDES = -I$(MESADIR)/include/
CLIPPOLY_CCINCLUDES =
     ACE_CCINCLUDES = -I$(ACEDIR)
    PROJ_CCINCLUDES = -I$(PROJDIR)/include
             VTKDIR = VtkDir
        CLIPPOLYDIR = ClipPolyDir
             ACEDIR = /proj/ACE_wrappers

          CCLDFLAGS = $(APP_CCLDFLAGS) $(IV_CCLDFLAGS) $(OTHER_CCLDFLAGS) $(EXTRA_CCLDFLAGS)
       IV_CCLDFLAGS = \
	$(DEBUG_CCFLAGS)\
	$(OPTIMIZE_CCFLAGS)\
	$(NONSHARED_CCLDFLAGS)
NONSHARED_CCLDFLAGS =
    EXTRA_CCLDFLAGS =

          CCDEPLIBS = $(APP_CCDEPLIBS) $(IV_CCDEPLIBS) $(OTHER_CCDEPLIBS) $(EXTRA_CCDEPLIBS)
       IV_CCDEPLIBS = \
	$(DEPLIBUNIDRAW)\
	$(DEPLIBGRAPHIC)\
	$(DEPLIBIV)\
	$(DEPLIBXEXT)\
	$(DEPLIBX11)\
	$(DEPLIBM)
    EXTRA_CCDEPLIBS =

	       PROJDIR = /home/johnston/local
            PROJLIBDIR = /home/johnston/local/lib
           PROJLIBBASE = libproj.a

            LIBPROJ = -L$(PROJLIBDIR) -lproj

            MESALIBDIR = /lib
           MESALIBBASE = libMesaGL.so.2
          OPENGLLDLIBS = -L$(MESALIBDIR) -lMesaGL

           CCLDLIBS = $(APP_CCLDLIBS) $(OTHER_CCLDLIBS) $(IV_CCLDLIBS) $(EXTRA_CCLDLIBS)
        IV_CCLDLIBS = \
	$(LIBDIRPATH)\
	$(LDLIBUNIDRAW)\
	$(LDLIBGRAPHIC)\
	$(LDLIBIV)\
	$(XLIBDIRPATH)\
	$(LDLIBXEXT)\
	$(LDLIBXT)\
	$(LDLIBX11)\
	$(ABSLIBDIRPATH)
     EXTRA_CCLDLIBS = -lstdc++ -lm

       VTK_CCLDLIBS =
          VTKLIBDIR =
         VTKLIBBASE = libvtk.so
  CLIPPOLY_CCLDLIBS =
     CLIPPOLYLIBDIR =
    CLIPPOLYLIBBASE = libclipoly.so.1.0
       ACE_CCLDLIBS = -L$(ACEDIR)/ace -lACE
          ACELIBDIR = /proj/ACE_wrappers/ace
         ACELIBBASE = libACE.so

            INSTALL = install
       INSTPGMFLAGS = -s
       INSTBINFLAGS = -m 0755
       INSTUIDFLAGS = -m 4755
       INSTLIBFLAGS = -m 0644
       INSTINCFLAGS = -m 0444
       INSTMANFLAGS = -m 0444
       INSTDATFLAGS = -m 0444
      INSTKMEMFLAGS = -m 4755

                 AR = ar clq
                 AS = as
                 CP = cp
                CPP = /lib/cpp $(EXTRA_CCDEFINES) $(OTHER_CCDEFINES)
      PREPROCESSCMD = $(CCDRIVER) -E $(EXTRA_CCDEFINES) $(OTHER_CCDEFINES)
                 LD = ld
                 LN = ln -s
          MKDIRHIER = $(SHELL) $(SCRIPTSRC)/mkdirhier.sh
                 MV = mv
             RANLIB = ranlib
    RANLIBINSTFLAGS =
                 RM = rm -f
              RMDIR = rm -rf
             RM_CMD = $(RM) ,* .emacs_* *..c *.BAK *.CKP *.a *.bak *.ln *.o a.out core errs make.log make.out tags TAGS
              TROFF = psroff

                TOP = /proj/vhclmaps-0.7
             RELTOP = ../../.
        CURRENT_DIR = /proj/vhclmaps-0.7/src/utils

              IVSRC = $(IVTOOLSSRC)
             BINSRC = $(VHCLMAPSSRC)/bin
          CONFIGSRC = $(RELTOP)/config
             INCSRC = $(IVSRC)/include
             LIBSRC = $(VHCLMAPSSRC)
             MANSRC = $(VHCLMAPSSRC)/man
          SCRIPTSRC = $(RELTOP)/src/scripts

             BINDIR = $(TOP)/bin/$(ARCH)
          CONFIGDIR = $(TOP)/config
             INCDIR = $(TOP)/include
             LIBDIR = $(RELTOP)/lib/$(ARCH)
          LIBALLDIR = $(TOP)/lib/all
             MANDIR = $(TOP)/man

       ABSCONFIGDIR = /usr/local/lib/vhclmaps/config
          ABSLIBDIR = /usr/local/lib
       ABSLIBALLDIR = /usr/local/lib/vhclmaps
         XCONFIGDIR = /usr/X11R6/lib/X11/config
            XINCDIR = /usr/X11R6/include
            XLIBDIR = /usr/X11R6/lib
          PSFONTDIR = /usr/lib/ps

include $(RELTOP)/config/config.mk

all::

Makefile::
	-@if [ -f Makefile ]; then \
	$(RM) Makefile.bak; \
	$(MV) Makefile Makefile.bak; \
	else exit 0; fi
	-@echo "Making Makefile"
	-@if [ $(TOP) = $(CURRENT_DIR) ]; then \
	echo >.toplevel-make-makefile; else \
	echo >.not-toplevel-make-makefile; fi
	-@if [ -f .toplevel-make-makefile ]; then \
	echo;\
	echo "remaking top-level Makefile using:";\
	echo "    top-level directory -- $(ABSTOP)";\
	echo "    vhclmaps config directory -- $(CONFIGSRC)";\
	echo "    X11 config directory -- $(XCONFIGDIR)";\
	echo;\
	$(IMAKE) $(IMAKEFLAGS) -I$(ABSTOP)/config \
	-DTOPDIR=$(ABSTOP) -DRELTOPDIR=$(RELTOP) -DCURDIR=$(ABSTOP);fi
	-@if [ -f .not-toplevel-make-makefile ]; then \
	$(IMAKE) $(IMAKEFLAGS) -DTOPDIR=$(TOP) \
	-DRELTOPDIR=$(RELTOP) -DCURDIR=$(CURRENT_DIR); fi
	-@if [ $(TOP) = $(CURRENT_DIR) ]; then \
	$(RM) .toplevel-make-makefile; else \
	$(RM) .not-toplevel-make-makefile; fi
Makefiles::
depend::
install::
uninstall::

clean::
	@$(RM_CMD) "#"*

# -------------------------------------------------------------------------

#
# utilities
#

PACKAGE = utils_vhclmaps

SUBDIRS = 	dcwdemprint 	vpftableprint 	vpfdbprint 	usgsdemprint

Makefiles::
	-@for i in $(SUBDIRS); \
	do \
	if [ -d $$i ]; then ( \
	echo "Making Makefiles" \
	"for $(ARCH) in $(CURRENT_DIR)/$$i"; \
	if [ -f $$i/Makefile ]; then \
	$(RM) $$i/Makefile.bak; \
	$(MV) $$i/Makefile $$i/Makefile.bak; \
	fi; \
	$(IMAKE) $(IMAKEFLAGS) \
	-DTOPDIR=$(TOP) -DRELTOPDIR=../$(RELTOP) \
	-DCURDIR=$(CURRENT_DIR)/$$i \
	-f $$i/Imakefile -s $$i/Makefile; \
	cd $$i; \
	$(MAKE) $(PASSARCH) Makefiles; \
	) else continue; fi; \
	done

depend::
	-@for i in $(SUBDIRS); \
	do \
	if [ -d $$i ]; then ( \
	echo "depending" \
	"for $(ARCH) in $(CURRENT_DIR)/$$i"; \
	cd $$i; \
	$(MAKE) $(PASSARCH) depend; \
	) else continue; fi; \
	done

all::
	-@for i in $(SUBDIRS); \
	do \
	if [ -d $$i ]; then ( \
	echo "making all" \
	"for $(ARCH) in $(CURRENT_DIR)/$$i"; \
	cd $$i; \
	$(MAKE) $(PASSARCH) all; \
	) else continue; fi; \
	done

install::
	-@for i in $(SUBDIRS); \
	do \
	if [ -d $$i ]; then ( \
	echo "installing" \
	"for $(ARCH) in $(CURRENT_DIR)/$$i"; \
	cd $$i; \
	$(MAKE) $(PASSARCH) install; \
	) else continue; fi; \
	done

uninstall::
	-@for i in $(SUBDIRS); \
	do \
	if [ -d $$i ]; then ( \
	echo "uninstalling" \
	"for $(ARCH) in $(CURRENT_DIR)/$$i"; \
	cd $$i; \
	$(MAKE) $(PASSARCH) uninstall; \
	) else continue; fi; \
	done

clean::
	-@for i in $(SUBDIRS); \
	do \
	if [ -d $$i ]; then ( \
	echo "cleaning" \
	"for $(ARCH) in $(CURRENT_DIR)/$$i"; \
	cd $$i; \
	$(MAKE) $(PASSARCH) clean; \
	) else continue; fi; \
	done

Makefiles.debug:
	@$(MAKE) ARCH="$(ARCH).debug" \
	SPECIAL_IMAKEFLAGS="$(SPECIAL_IMAKEFLAGS) -DUseDebug" \
	Makefiles
depend.debug:
	@$(MAKE) ARCH="$(ARCH).debug" \
	SPECIAL_IMAKEFLAGS="$(SPECIAL_IMAKEFLAGS) -DUseDebug" \
	depend
all.debug:
	@$(MAKE) ARCH="$(ARCH).debug" \
	SPECIAL_IMAKEFLAGS="$(SPECIAL_IMAKEFLAGS) -DUseDebug" \
	all
install.debug:
	@$(MAKE) ARCH="$(ARCH).debug" \
	SPECIAL_IMAKEFLAGS="$(SPECIAL_IMAKEFLAGS) -DUseDebug" \
	install
clean.debug:
	@$(MAKE) ARCH="$(ARCH).debug" \
	SPECIAL_IMAKEFLAGS="$(SPECIAL_IMAKEFLAGS) -DUseDebug" \
	clean

cmchkin::
	-@if [ $(NO_IVMKCM) ]; then exit 0; else \
	if [ ! -d $(TOP)/cm ]; then \
	(cd $(TOP); cminstall); fi; fi
	-@if [ $(NO_IVMKCM) ]; then exit 0; else \
	csh -c '(setenv REPOSITORY_FILES "$(REPOSITORY_FILES)"; \
	cmchkin $(PACKAGE) $(TOP)/cm $(TOP) $(CURRENT_DIR))'; fi

cmtag::
	-@if [ $(NO_IVMKCM) ]; then exit 0; else \
	if [ ! -d $(TOP)/cm ]; then \
	(echo "Build repository first with cmchkin"; exit 0;); fi; \
	if [ ! -d $(CURRENT_DIR)/CVS ]; then \
	(echo "Build repository first with cmchkin"; exit 0;); fi; fi
	-@if [ $(NO_IVMKCM) ]; then exit 0; else \
	cmtag $(CMFLAGS) $(CMARGS); fi

cmadd::
	-@if [ $(NO_IVMKCM) ]; then exit 0; else \
	if [ ! -d $(TOP)/cm ]; then \
	(echo "Build repository first with cmchkin"; exit 0;); fi; \
	if [ ! -d $(CURRENT_DIR)/CVS ]; then \
	(echo "Build repository first with cmchkin"; exit 0;); fi; fi
	-@if [ $(NO_IVMKCM) ]; then exit 0; else \
	csh -c '(setenv REPOSITORY_FILES "$(REPOSITORY_FILES)"; cmadd -m null_message)'; fi

cmupdate::
	-@if [ $(NO_IVMKCM) ]; then exit 0; else \
	if [ ! -d $(TOP)/cm ]; then \
	(echo "Build repository first with cmchkin"; exit 0;); fi; \
	if [ ! -d $(CURRENT_DIR)/CVS ]; then \
	(echo "Build repository first with cmchkin"; exit 0;); fi; fi
	-@if [ $(NO_IVMKCM) ]; then exit 0; else cmupdate; fi

cmcommit::
	-@if [ $(NO_IVMKCM) ]; then exit 0; else \
	if [ ! -d $(TOP)/cm ]; then \
	(echo "Build repository first with cmchkin"; exit 0;); fi; \
	if [ ! -d $(CURRENT_DIR)/CVS ]; then \
	(echo "Build repository first with cmchkin"; exit 0;); fi; fi
	-@if [ $(NO_IVMKCM) ]; then exit 0; else \
	if [ -z "$(CMMSG)" ]; then cmcommit $(CMFLAGS); \
	else cmcommit $(CMFLAGS) -m "$(CMMSG)"; fi; fi

cmchkin::
	-@for i in $(SUBDIRS); \
	do \
	if [ -d $$i ]; then ( \
	echo "checking into the repository" \
	"for $(ARCH) in $(CURRENT_DIR)/$$i"; \
	cd $$i; \
	$(MAKE) $(PASSARCH) cmchkin; \
	) else continue; fi; \
	done

cmtag::
	-@for i in $(SUBDIRS); \
	do \
	if [ -d $$i ]; then ( \
	echo "tagging the repository" \
	"for $(ARCH) in $(CURRENT_DIR)/$$i"; \
	cd $$i; \
	$(MAKE) $(PASSARCH) cmtag; \
	) else continue; fi; \
	done

cmadd::
	-@for i in $(SUBDIRS); \
	do \
	if [ -d $$i ]; then ( \
	echo "adding to the repository" \
	"for $(ARCH) in $(CURRENT_DIR)/$$i"; \
	cd $$i; \
	$(MAKE) $(PASSARCH) cmadd; \
	) else continue; fi; \
	done

cmupdate::
	-@for i in $(SUBDIRS); \
	do \
	if [ -d $$i ]; then ( \
	echo "updating from repository" \
	"for $(ARCH) in $(CURRENT_DIR)/$$i"; \
	cd $$i; \
	$(MAKE) $(PASSARCH) cmupdate; \
	) else continue; fi; \
	done

cmcommit::
	-@for i in $(SUBDIRS); \
	do \
	if [ -d $$i ]; then ( \
	echo "committing to repository" \
	"for $(ARCH) in $(CURRENT_DIR)/$$i"; \
	cd $$i; \
	$(MAKE) $(PASSARCH) cmcommit; \
	) else continue; fi; \
	done

